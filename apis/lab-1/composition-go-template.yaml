apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: bucket-composition-v2
spec:
  compositeTypeRef:
    apiVersion: example.org/v1alpha1
    kind: XBucket
  mode: Pipeline
  pipeline:
    - step: go-templating
      functionRef:
        name: function-go-templating
      input:
        apiVersion: gotemplating.fn.crossplane.io/v1beta1
        kind: GoTemplate
        source: Inline
        inline:
          template: |
            ---
            apiVersion: s3.aws.upbound.io/v1beta1
            kind: Bucket
            metadata:
              annotations:
                gotemplating.fn.crossplane.io/composition-resource-name: bucket
              labels:
                reference: {{ .observed.composite.resource.metadata.name }}-bucket
              name: {{ .observed.composite.resource.metadata.name }}
            spec:
              forProvider:
                region: {{ .observed.composite.resource.spec.parameters.region }}

            {{- if .observed.composite.resource.status.output.queueArn }}
            ---
            apiVersion: s3.aws.upbound.io/v1beta1
            kind: BucketNotification
            metadata:
              annotations:
                gotemplating.fn.crossplane.io/composition-resource-name: bucket-notification
              name: {{ .observed.composite.resource.metadata.name }}
            spec:
              forProvider:
                bucketSelector:
                  matchLabels:
                    reference: {{ .observed.composite.resource.metadata.name }}-bucket
                region: {{ .observed.composite.resource.spec.parameters.region }}
                queue:
                  - events: {{ .observed.composite.resource.spec.parameters.notifyEventNames }}
                    queueArn: {{ .observed.composite.resource.status.output.queueArn }}
              providerConfigRef:
                name: default
            {{- end }}
            ---
            apiVersion: sqs.aws.upbound.io/v1beta1
            kind: Queue
            metadata:
              annotations:
                gotemplating.fn.crossplane.io/composition-resource-name: queue
              name: {{ .observed.composite.resource.metadata.name }}
            spec:
              forProvider:
                name: {{ .observed.composite.resource.metadata.name }}
                region: {{ .observed.composite.resource.spec.parameters.region }}
                delaySeconds: 4
                policy: |
                  {
                    "Version": "2012-10-17",
                    "Id": "allow-s3",
                    "Statement": [
                      {
                        "Sid": "allow-s3",
                        "Effect": "Allow",
                        "Principal": {
                          "Service": "s3.amazonaws.com"
                        },
                        "Action": [
                          "SQS:SendMessage"
                        ],
                        "Resource": "*",
                        "Condition": {
                          "ArnLike": {
                            "aws:SourceArn": "arn:aws:s3:*:*:*"
                          }
                        }
                      }
                    ]
                  }
              providerConfigRef:
                name: default

            {{- with .observed.resources.queue }}
            ---
            apiVersion: example.org/v1alpha1
            kind: XBucket
            status:
              output:
                queueArn: {{ .status.atProvider.arn }}
            {{- end }}
    - step: automatically-detect-ready-composed-resources
      functionRef:
        name: function-auto-ready